{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/grcn/Documents/Icepick/icepicker/client/src/state/index.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { Data, User } from \"@/app/session/[sessionId]/page\";\nimport { Reaction } from \"@/components/Container\";\n\ntype SessionState = {\n  data: Data | null;\n  currentQuestion: Data[\"currentQuestion\"] | null;\n  currentUser: User | null;\n  sessionId: string | null;\n  hostId: string | null;\n  error: string;\n  name: string;\n  loading: boolean;\n  users: User[];\n  reactions: Reaction[];\n};\n\nconst initialState: SessionState = {\n  data: null,\n  currentQuestion: null,\n  currentUser: null,\n  sessionId: null,\n  hostId: null,\n  error: \"\",\n  name: \"\",\n  loading: false,\n  users: [],\n  reactions: [],\n};\n\nconst sessionSlice = createSlice({\n  name: \"session\",\n  initialState,\n  reducers: {\n  \n    setData(state, action: PayloadAction<Data>) {\n      state.data = action.payload;\n    },\n    setSessionId(state, action: PayloadAction<string>) {\n      state.sessionId = action.payload;\n    },\n   \n    setError(state, action: PayloadAction<string>) {\n      state.error = action.payload;\n    },\n    setName(state, action: PayloadAction<string>) {\n      state.name = action.payload;\n    },\n    setLoading(state, action: PayloadAction<boolean>) {\n      state.loading = action.payload;\n    },\n\n\n    initSocket(state, action: PayloadAction<string>) {\n      state.sessionId = action.payload;\n    },\n  },\n});\n\nexport const {\n  setData,\n  setError,\n  setName,\n  setLoading,\n  setSessionId,\n  initSocket,\n} = sessionSlice.actions;\n\nexport default sessionSlice.reducer;"],"names":[],"mappings":";;;;;;;;;AAAA;;AAiBA,MAAM,eAA6B;IACjC,MAAM;IACN,iBAAiB;IACjB,aAAa;IACb,WAAW;IACX,QAAQ;IACR,OAAO;IACP,MAAM;IACN,SAAS;IACT,OAAO,EAAE;IACT,WAAW,EAAE;AACf;AAEA,MAAM,eAAe,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IAC/B,MAAM;IACN;IACA,UAAU;QAER,SAAQ,KAAK,EAAE,MAA2B;YACxC,MAAM,IAAI,GAAG,OAAO,OAAO;QAC7B;QACA,cAAa,KAAK,EAAE,MAA6B;YAC/C,MAAM,SAAS,GAAG,OAAO,OAAO;QAClC;QAEA,UAAS,KAAK,EAAE,MAA6B;YAC3C,MAAM,KAAK,GAAG,OAAO,OAAO;QAC9B;QACA,SAAQ,KAAK,EAAE,MAA6B;YAC1C,MAAM,IAAI,GAAG,OAAO,OAAO;QAC7B;QACA,YAAW,KAAK,EAAE,MAA8B;YAC9C,MAAM,OAAO,GAAG,OAAO,OAAO;QAChC;QAGA,YAAW,KAAK,EAAE,MAA6B;YAC7C,MAAM,SAAS,GAAG,OAAO,OAAO;QAClC;IACF;AACF;AAEO,MAAM,EACX,OAAO,EACP,QAAQ,EACR,OAAO,EACP,UAAU,EACV,YAAY,EACZ,UAAU,EACX,GAAG,aAAa,OAAO;uCAET,aAAa,OAAO"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file:///Users/grcn/Documents/Icepick/icepicker/client/src/state/middleware/socketMiddleware.ts"],"sourcesContent":["import { Middleware } from \"@reduxjs/toolkit\";\nimport { io, Socket } from \"socket.io-client\";\nimport { setData, initSocket } from \"..\";\n\nlet socket: Socket | null = null;\n\n// Removemos o uso de RootState para quebrar a dependÃªncia circular\nexport const socketMiddleware: Middleware = (store) => (next) => (action) => {\n  if (initSocket.match(action)) {\n    if (!socket) {\n      const sessionId = action.payload;\n\n      socket = io(\"http://localhost:3333\", { transports: [\"websocket\"] });\n\n      socket.emit(\"join-room\", sessionId);\n      socket.emit(\"sessionDeleted\", sessionId);\n\n      socket.on(\"sessionUpdated\", (updatedData) => {\n        store.dispatch(setData(updatedData));\n      });\n    }\n  }\n\n  return next(action);\n};\n\nexport const getSocket = () => socket;\n"],"names":[],"mappings":";;;;AACA;AACA;AADA;;;AAGA,IAAI,SAAwB;AAGrB,MAAM,mBAA+B,CAAC,QAAU,CAAC,OAAS,CAAC;YAChE,IAAI,wHAAA,CAAA,aAAU,CAAC,KAAK,CAAC,SAAS;gBAC5B,IAAI,CAAC,QAAQ;oBACX,MAAM,YAAY,OAAO,OAAO;oBAEhC,SAAS,CAAA,GAAA,kLAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;wBAAE,YAAY;4BAAC;yBAAY;oBAAC;oBAEjE,OAAO,IAAI,CAAC,aAAa;oBACzB,OAAO,IAAI,CAAC,kBAAkB;oBAE9B,OAAO,EAAE,CAAC,kBAAkB,CAAC;wBAC3B,MAAM,QAAQ,CAAC,CAAA,GAAA,wHAAA,CAAA,UAAO,AAAD,EAAE;oBACzB;gBACF;YACF;YAEA,OAAO,KAAK;QACd;AAEO,MAAM,YAAY,IAAM"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///Users/grcn/Documents/Icepick/icepicker/client/src/state/redux.tsx"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport sessionReducer from \"./index\";\nimport { socketMiddleware } from \"./middleware/socketMiddleware\";\n\nexport const store = configureStore({\n  reducer: {\n    session: sessionReducer,\n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(socketMiddleware),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport type AppThunkDispatch = typeof store.dispatch;\n"],"names":[],"mappings":";;;AACA;AACA;AAFA;;;;AAIO,MAAM,QAAQ,CAAA,GAAA,8LAAA,CAAA,iBAAc,AAAD,EAAE;IAClC,SAAS;QACP,SAAS,wHAAA,CAAA,UAAc;IACzB;IACA,YAAY,CAAC,uBAAyB,uBAAuB,MAAM,CAAC,iJAAA,CAAA,mBAAgB;AACtF"}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///Users/grcn/Documents/Icepick/icepicker/client/src/app/providers.tsx"],"sourcesContent":["'use client';\nimport { Provider } from \"react-redux\";\nimport { store } from \"../state/redux\";\n\nexport function ReduxProvider({ children }: { children: React.ReactNode }) {\n  return <Provider store={store}>{children}</Provider>;\n}"],"names":[],"mappings":";;;;AAEA;AADA;AADA;;;;AAIO,SAAS,cAAc,EAAE,QAAQ,EAAiC;IACvE,qBAAO,6LAAC,4JAAA,CAAA,WAAQ;QAAC,OAAO,yHAAA,CAAA,QAAK;kBAAG;;;;;;AAClC;KAFgB"}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}